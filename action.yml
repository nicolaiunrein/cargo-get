name: cargo-get
author: n.unrein@gmail.com
branding:
  color: red
  icon: upload
description: Get cargo package metadata
inputs:
  flags:
    description: "Flags to pass to cargo get (default: package name)"
    required: false
  options:
    description: "Options to pass to cargo get"
    required: false
    default: ""
  subcommand:
    description: "Subcommand to run"
    required: false
    default: ""
outputs:
  metadata:
    description: "Cargo package metadata"
    value: ${{ steps.cargo-get.outputs.metadata }}
runs:
  using: composite
  steps:
    - if: runner.os == 'Linux'
      name: Install cargo-get
      run: |
        download_cargo_get() {
          current_target=$(rustc -Vv | grep host | cut -d ' ' -f 2)
          download_link=$(curl -s https://api.github.com/repos/nicolaiunrein/cargo-get/releases/latest | grep $current_target\" | grep browser_download_url | cut -d: -f2,3 | tr -d '\"\ ')
          mkdir -p ~/.cargo/bin/
          curl -sSfLo ~/.cargo/bin/cargo-get "$download_link"
          chmod +x ~/.cargo/bin/cargo-get
        }

        download_cargo_get || echo "Failed for some reason!"
      shell: bash
    - if: runner.os == 'macOS'
      name: Install cargo-get
      run: |
        download_cargo_get() {
          current_target=$(rustc -Vv | grep host | cut -d ' ' -f 2)
          download_link=$(curl -s https://api.github.com/repos/nicolaiunrein/cargo-get/releases/latest | grep $current_target\" | grep browser_download_url | cut -d: -f2,3 | tr -d '\"\ ')
          mkdir -p ~/.cargo/bin/
          curl -sSfLo ~/.cargo/bin/cargo-get "$download_link"
          chmod +x ~/.cargo/bin/cargo-get
        }

        download_cargo_get || echo "Failed for some reason!"
      shell: bash
    - if: runner.os == 'Windows'
      name: Install cargo-get
      run: |
        download_cargo_get() {
          current_target=$(rustc -Vv | grep host | cut -d ' ' -f 2)
          download_link=$(curl -s https://api.github.com/repos/nicolaiunrein/cargo-get/releases/latest | grep $current_target\" | grep browser_download_url | cut -d: -f2,3 | tr -d '\"\ ')
          mkdir -p ~/.cargo/bin/
          curl -sSfLo ~/.cargo/bin/cargo-get.exe "$download_link"
          chmod +x ~/.cargo/bin/cargo-get.exe
        }

        download_cargo_get || echo "Failed for some reason!"
      shell: bash
    - name: Resort to building the binary if we can't find a prebuilt one
      run: |
        install_cargo_get() {
          if [ -n "$CARGO_GET_VERSION" ]; then
            cargo install cargo-get --version "$CARGO_GET_VERSION"
          else
            cargo install cargo-get
          fi
        }

        if [ -x "$(command -v cargo-get)" ]; then
          echo "cargo-get is already installed"
        else
          install_cargo_get
        fi
      shell: bash
    - id: cargo-get
      name: Cargo get metadata
      run: |
        if [ -n "${{ inputs.subcommand }}" ]; then
          metadata=$(cargo get ${{ inputs.flags }} ${{ inputs.options }} ${{ inputs.subcommand }})
          echo "metadata=$metadata" >> $GITHUB_OUTPUT
        else
          echo "$(cargo get all --output-format github-action)" >> $GITHUB_OUTPUT
        fi
      shell: bash
