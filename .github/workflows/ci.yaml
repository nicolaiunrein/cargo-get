name: CI
on:
  push:
    branches: master

  pull_request:
    branches: master

jobs:
  install:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        rust: [stable]

    steps:
    - name: Install
      run: cargo install cargo-get

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-24.04-arm, windows-latest, windows-11-arm, macOS-latest]
        rust: [stable]
    steps:
    - uses: hecrj/setup-rust-action@v1
      with:
        rust-version: ${{ matrix.rust }}
    - uses: actions/checkout@v4
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('Cargo.lock') }}
    - name: Cache cargo index
      uses: actions/cache@v4
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('Cargo.lock') }}
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
  
  build-nightly:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        rust: [nightly]
    steps:
    - uses: hecrj/setup-rust-action@v1
      with:
        rust-version: ${{ matrix.rust }}
    - uses: actions/checkout@v4
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('Cargo.lock') }}
    - name: Cache cargo index
      uses: actions/cache@v4
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('Cargo.lock') }}
    - name: Build
      run: cargo build --verbose
      continue-on-error: true
    - name: Run tests
      run: cargo test --verbose
      continue-on-error: true

  check:
    name: check (ubuntu-latest, stable)
    runs-on: ubuntu-latest
    steps:
      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: stable
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Cargo Check
        run: cargo check

  clippy:
    name: clippy (ubuntu-latest, stable)
    runs-on: ubuntu-latest
    steps:
      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: stable
          components: clippy
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('Cargo.lock') }}
      - name: Cargo Clippy
        run: cargo clippy -- -D warnings -A deprecated

  fmt:
    name: fmt (ubuntu-latest, stable)
    runs-on: ubuntu-latest
    steps:
      - uses: hecrj/setup-rust-action@v2
        with:
          rust-version: stable
          components: rustfmt
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Check Formatting
        run: cargo fmt --all -- --check
